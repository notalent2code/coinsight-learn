version: '3.8'

services:
  # Infrastructure
  # Postgres for Keycloak (keeping original for Keycloak compatibility)
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - coinsight-network

  # Auth service database
  auth-db:
    image: postgres:17-alpine
    container_name: auth-db
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth_service
    volumes:
      - auth-postgres-data:/var/lib/postgresql/data
      - ./database/auth-init:/docker-entrypoint-initdb.d
    networks:
      - coinsight-network

  # Transaction service database
  transaction-db:
    image: postgres:17-alpine
    container_name: transaction-db
    ports:
      - '5434:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: transaction_service
    volumes:
      - transaction-postgres-data:/var/lib/postgresql/data
      - ./database/transaction-init:/docker-entrypoint-initdb.d
    networks:
      - coinsight-network

  # Add budget service database
  budget-db:
    image: postgres:17-alpine
    container_name: budget-db
    ports:
      - '5435:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: budget_service
    volumes:
      - budget-postgres-data:/var/lib/postgresql/data
      - ./database/budget-init:/docker-entrypoint-initdb.d
    networks:
      - coinsight-network

  # Add notification service database  
  notification-db:
    image: postgres:17-alpine
    container_name: notification-db
    ports:
      - '5436:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: notification_service
    volumes:
      - notification-postgres-data:/var/lib/postgresql/data
      - ./database/notification-init:/docker-entrypoint-initdb.d
    networks:
      - coinsight-network

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    ports:
      - '8090:8080'
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HEALTH_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true'
      KC_HOSTNAME_URL: http://localhost:8090
      KC_HOSTNAME_ADMIN_URL: http://localhost:8090
      KC_HTTP_ENABLED: 'true'
    command: ['start-dev']
    depends_on:
      - postgres
    networks:
      - coinsight-network

  vault:
    image: hashicorp/vault:1.19
    container_name: vault
    ports:
      - '8200:8200'
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    networks:
      - coinsight-network

  kafka:
    image: confluentinc/cp-kafka:7.9.1
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - coinsight-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.1
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - coinsight-network

  # Add Redis service
  redis:
    image: redis:8.0.1
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - coinsight-network

  prometheus:
    image: prom/prometheus:v3.4.0
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Allow container to access host network
    networks:
      - coinsight-network

  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana
    ports:
      - '9091:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - coinsight-network

  # Add MailHog for email testing
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - '1025:1025'  # SMTP port
      - '8025:8025'  # Web UI port
    networks:
      - coinsight-network

  # Microservices
  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - '8888:8888'
    environment:
      - CONFIG_REPO_URI=file:///tmp/config-repo
      - VAULT_URI=http://vault:8200
      - VAULT_TOKEN=myroot
    volumes:
      - ./config-repo:/tmp/config-repo
    depends_on:
      - vault
    networks:
      - coinsight-network

  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    ports:
      - '8080:8080'
    environment:
      - CONFIG_SERVER_URI=http://config-server:8888
      - KEYCLOAK_URL=http://keycloak:8080
      - AUTH_SERVICE_URL=http://auth-service:8081
      - TRANSACTION_SERVICE_URL=http://transaction-service:8082
      - OCR_SERVICE_URL=http://ocr-service:8083
      - BUDGET_SERVICE_URL=http://budget-service:8084
      - NOTIFICATION_SERVICE_URL=http://notification-service:8085
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - config-server
      - keycloak
      - redis
    networks:
      - coinsight-network

    # Update auth-service configuration
  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - '8081:8081'
    environment:
      - CONFIG_SERVER_URI=http://config-server:8888
      - KEYCLOAK_URL=http://keycloak:8080
      - DB_HOST=auth-db
      - DB_PORT=5432
    depends_on:
      - config-server
      - auth-db
      - keycloak
    networks:
      - coinsight-network

  # Update transaction-service configuration
  transaction-service:
    build: ./transaction-service
    container_name: transaction-service
    ports:
      - '8082:8082'
    environment:
      - CONFIG_SERVER_URI=http://config-server:8888
      - KEYCLOAK_URL=http://keycloak:8080
      - DB_HOST=transaction-db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_SERVERS=kafka:29092
    depends_on:
      - config-server
      - transaction-db
      - keycloak
      - redis
      - kafka
    networks:
      - coinsight-network

  ocr-service:
    build: ./ocr-service
    container_name: ocr-service
    ports:
      - '8083:8083'
    environment:
      - CONFIG_SERVER_URI=http://config-server:8888
      - KEYCLOAK_URL=http://keycloak:8080
      - TRANSACTION_SERVICE_URL=http://transaction-service:8082
      # - AZURE_FORM_RECOGNIZER_ENDPOINT=${AZURE_FORM_RECOGNIZER_ENDPOINT}
      # - AZURE_FORM_RECOGNIZER_API_KEY=${AZURE_FORM_RECOGNIZER_API_KEY}
    depends_on:
      - config-server
      - keycloak
      - transaction-service
    networks:
      - coinsight-network
  
  # Budget Service
  budget-service:
    build: ./budget-service
    container_name: budget-service
    ports:
      - '8084:8084'
    environment:
      - CONFIG_SERVER_URI=http://config-server:8888
      - KEYCLOAK_URL=http://keycloak:8080
      - DB_HOST=budget-db
      - DB_PORT=5432
      - DB_NAME=budget_service
      - KAFKA_SERVERS=kafka:29092
    depends_on:
      - config-server
      - budget-db
      - keycloak
      - kafka
    networks:
      - coinsight-network

  # Notification Service
  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - '8085:8085'
    environment:
      - CONFIG_SERVER_URI=http://config-server:8888
      - KEYCLOAK_URL=http://keycloak:8080
      - DB_HOST=notification-db
      - DB_PORT=5432
      - DB_NAME=notification_service
      - KAFKA_SERVERS=kafka:29092
      - MAIL_HOST=mailhog
      - MAIL_PORT=1025
    depends_on:
      - config-server
      - notification-db
      - keycloak
      - kafka
      - mailhog
    networks:
      - coinsight-network

volumes:
  postgres-data:
  auth-postgres-data:
  transaction-postgres-data:
  budget-postgres-data:
  notification-postgres-data:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  coinsight-network:
    driver: bridge
