# Global values
global:
  imageRegistry: ""
  imageTag: latest
  pullPolicy: IfNotPresent
  keycloak:
    host: keycloak.coinsight.local
    realm: coinsight-realm
    clientId: coinsight-app
    clientSecret: "secret"
  database:
    host: postgres
    port: 5432
    name: coinsight
    user: postgres
    password: postgres
  vault:
    host: vault
    port: 8200
    token: myroot
  azure:
    formRecognizer:
      endpoint: ""
      apiKey: ""

# Infrastructure services
postgres:
  enabled: true
  image: postgres:16.2
  persistence:
    enabled: true
    size: 1Gi
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

keycloak:
  enabled: true
  image: quay.io/keycloak/keycloak:23.0.1
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

vault:
  enabled: true
  image: hashicorp/vault:1.15.5
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

kafka:
  enabled: true
  image: confluentinc/cp-kafka:7.4.0
  replicaCount: 1
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

prometheus:
  enabled: true
  image: prom/prometheus:v2.50.0
  persistence:
    enabled: true
    size: 2Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

grafana:
  enabled: true
  image: grafana/grafana:10.3.0
  persistence:
    enabled: true
    size: 1Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

# Application services
configServer:
  enabled: true
  image: ${global.imageRegistry}/config-server:${global.imageTag}
  replicaCount: 1
  service:
    type: ClusterIP
    port: 8888
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

gateway:
  enabled: true
  image: ${global.imageRegistry}/gateway-service:${global.imageTag}
  replicaCount: 2
  service:
    type: ClusterIP
    port: 8080
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

authService:
  enabled: true
  image: ${global.imageRegistry}/auth-service:${global.imageTag}
  replicaCount: 2
  service:
    type: ClusterIP
    port: 8081
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

transactionService:
  enabled: true
  image: ${global.imageRegistry}/transaction-service:${global.imageTag}
  replicaCount: 2
  service:
    type: ClusterIP
    port: 8082
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

ocrService:
  enabled: true
  image: ${global.imageRegistry}/ocr-service:${global.imageTag}
  replicaCount: 2
  service:
    type: ClusterIP
    port: 8083
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  hosts:
    - host: coinsight.local
      paths:
        - path: /api/?(.*)
          pathType: Prefix
          service: gateway
          port: 8080
        - path: /actuator/?(.*)
          pathType: Prefix
          service: gateway
          port: 8080
  tls: []