server:
  port: 8081

spring:
  application:
    name: auth-service
  cloud:
    vault:
      enabled: false
  # Keep your other configurations as fallbacks
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:keycloak}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    # properties:
    #   hibernate:
    #     format_sql: true
    # show-sql: false
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_URL:http://localhost:8090}/realms/${KEYCLOAK_REALM:coinsight-realm}

keycloak:
  auth-server-url: ${KEYCLOAK_URL:http://localhost:8090}
  realm: ${KEYCLOAK_REALM:coinsight-realm}
  resource: auth-service  # This should match the client ID in Keycloak
  credentials:
    secret: ${KEYCLOAK_CLIENT_SECRET:OgRK7as6bjDxNKT5qpAbAtaMKsg7c1bh}  # Use the secret from Keycloak
  public-client: false
  use-resource-role-mappings: true
  bearer-only: false
  admin:
    username: ${KEYCLOAK_ADMIN_USERNAME:admin}
    password: ${KEYCLOAK_ADMIN_PASSWORD:admin}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  prometheus:
    metrics:
      export:
        enabled: true